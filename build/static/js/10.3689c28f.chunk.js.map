{"version":3,"sources":["components/Contacts/ContactListItem.js","components/Contacts/AddContact.js","components/Contacts/FindContact.js","components/Contacts/ContactList.js"],"names":["mapDispatchToProps","removeContact","connect","contact","Card","className","border","style","width","margin","flex","Body","Title","name","Text","number","Button","variant","type","id","onClick","e","target","initialState","firstName","secondName","AddContact","state","handleChange","value","setState","handleSubmit","replace","l","toUpperCase","props","addUserContact","this","Container","Row","Col","xs","lg","Form","Group","as","controlId","Label","Control","placeholder","onChange","Component","getFilterValue","InputGroup","FormControl","aria-label","aria-describedby","ContactList","filteredContact","contacts","filter","length","toLowerCase","includes","getContacts","token","filteredContacts","CardDeck","map","user","getUserInfo","getUserContacts","getUserToken","getContactsFilter"],"mappings":"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","file":"static/js/10.3689c28f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeContact } from \"../../redux/contacts/contactsOperations\";\r\n\r\nfunction ContactListItem({ contact, removeContact }) {\r\n  return (\r\n    <Card\r\n      className=\"col mb-5\"\r\n      border=\"primary\"\r\n      style={{ width: \"18rem\", margin: \"10px\", flex: \"0 0 80%\" }}\r\n    >\r\n      <Card.Body>\r\n        <Card.Title>{contact.name}</Card.Title>\r\n        <Card.Text>Номер: {contact.number}</Card.Text>\r\n        <Button\r\n          variant=\"primary\"\r\n          type=\"button\"\r\n          id={contact.id}\r\n          onClick={(e) => removeContact(e.target.id)}\r\n        >\r\n          Удалить\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  removeContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactListItem);\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { addUserContact } from \"../../redux/contacts/contactsOperations\";\r\n\r\nconst initialState = {\r\n  firstName: \"\",\r\n  secondName: \"\",\r\n  number: \"\",\r\n};\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    firstName: \"\",\r\n    secondName: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const { firstName, secondName, number } = this.state;\r\n    const fullName = `${firstName} ${secondName}`;\r\n    const contact = {\r\n      name: fullName.replace(/\\b\\w/g, (l) => l.toUpperCase()),\r\n      number: number,\r\n    };\r\n    this.props.addUserContact(contact);\r\n    this.setState({ ...initialState });\r\n  };\r\n\r\n  render() {\r\n    const { firstName, secondName, number } = this.state;\r\n    return (\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs lg=\"5\">\r\n            <h2 className=\"row row-cols-md-5 justify-content-center\">\r\n              Добавить контакт\r\n            </h2>\r\n            {/* <Form> */}\r\n            <Form>\r\n              <Form.Group as={Col} controlId=\"FirstName\">\r\n                <Form.Label>Имя</Form.Label>\r\n                <Form.Control\r\n                  type=\"name\"\r\n                  placeholder=\"Имя\"\r\n                  name=\"firstName\"\r\n                  value={firstName}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group as={Col} controlId=\"SecondName\">\r\n                <Form.Label>Фамилия</Form.Label>\r\n                <Form.Control\r\n                  type=\"name\"\r\n                  placeholder=\"Фамилия\"\r\n                  name=\"secondName\"\r\n                  value={secondName}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group as={Col} controlId=\"formGridNumber\">\r\n                <Form.Label>Номер</Form.Label>\r\n                <Form.Control\r\n                  type=\"Number\"\r\n                  placeholder=\"Введите номер\"\r\n                  name=\"number\"\r\n                  value={number}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n            <Button variant=\"primary\" type=\"button\" onClick={this.handleSubmit}>\r\n              Добавить контакт\r\n            </Button>\r\n            {/* </Form> */}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addUserContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AddContact);\r\n","import React from \"react\";\r\nimport { Container, Row, Col, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { getFilterValue } from \"../../redux/contacts/contactsActions\";\r\n\r\nfunction FindContact({ getFilterValue }) {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs lg=\"5\">\r\n          <p></p>\r\n          <h2 className=\"row row-cols-md-5 justify-content-center\">\r\n            Найти контакты\r\n          </h2>\r\n          <InputGroup className=\"mb-3\">\r\n            <FormControl\r\n              placeholder=\"Начните вводить имя\"\r\n              aria-label=\"Начните вводить имя\"\r\n              aria-describedby=\"basic-addon2\"\r\n              onChange={(e) => getFilterValue(e.target.value)}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getFilterValue,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(FindContact);\r\n","import React, { Component } from \"react\";\r\nimport { CardDeck } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport AddContact from \"./AddContact\";\r\nimport FindContact from \"./FindContact\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserContacts,\r\n  getUserToken,\r\n  getContactsFilter,\r\n  getUserInfo,\r\n} from \"../../redux/contacts/contactsSelectors\";\r\nimport { getContacts } from \"../../redux/contacts/contactsOperations\";\r\n\r\nclass ContactList extends Component {\r\n  componentDidMount() {\r\n    this.props.getContacts(this.props.token);\r\n  }\r\n\r\n  filteredContact = (contacts, filter) => {\r\n    if (filter.length !== 0) {\r\n      return contacts.filter((contact) =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase())\r\n      );\r\n    } else {\r\n      return contacts;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.props;\r\n    const filteredContacts = this.filteredContact(contacts, filter);\r\n    return (\r\n      <>\r\n        <br />\r\n        <AddContact />\r\n        <FindContact />\r\n        <br />\r\n        <h2 className=\"row row-cols-5 justify-content-center\">\r\n          Список контактов\r\n        </h2>\r\n        {filteredContacts.length !== 0 && (\r\n          <CardDeck className=\"row row-cols-md-5 justify-content-center\">\r\n            {filteredContacts.map((contact) => (\r\n              <ContactListItem contact={contact} key={contact.id} />\r\n            ))}\r\n          </CardDeck>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: getUserInfo(state),\r\n    contacts: getUserContacts(state),\r\n    token: getUserToken(state),\r\n    filter: getContactsFilter(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n"],"sourceRoot":""}